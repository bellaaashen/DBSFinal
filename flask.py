# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C_z8OUwjBYJ_d6nHa5247PUFSSiapb_6
"""

from flask import Flask, render_template, request
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier, VotingClassifier
import pandas as pd
import random

app = Flask(__name__)

# Load dataset
insurance_data = pd.read_csv('extended_synthetic_insurance_data.csv')
features = ['age', 'smoker', 'claim_amount']
insurance_data['ProductID'] = random.choices(range(1, 11), k=len(insurance_data))

# Train ensemble model
X = insurance_data[features]
y = insurance_data['ProductID']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
knn = KNeighborsClassifier(n_neighbors=5)
rf = RandomForestClassifier(n_estimators=100, random_state=42)
ensemble_model = VotingClassifier(estimators=[('knn', knn), ('rf', rf)], voting='hard')
ensemble_model.fit(X_scaled, y)

# Define recommendation function
def recommend_products(input_features):
    input_scaled = scaler.transform([input_features])
    return ensemble_model.predict(input_scaled)

@app.route('/')
def home():
    return render_template('home.html')

@app.route('/submit', methods=['POST'])
def submit():
    age = int(request.form['age'])
    smoker = int(request.form['smoker'])
    claim_amount = float(request.form['claim_amount'])
    recommendation = recommend_products([age, smoker, claim_amount])
    return render_template('results.html', recommendation=recommendation[0])

if __name__ == '__main__':
    app.run(debug=True)